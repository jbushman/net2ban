#!/usr/bin/env python
import ConfigParser
import eventlet
import json
import net2ban
import subprocess
import logging
import time
import os
import pickle

config = ConfigParser.ConfigParser(allow_no_value=True)
config.readfp(open('/etc/net2ban/net2ban.cfg'))
logging.basicConfig(filename='/var/log/net2ban.log', level=logging.INFO)


def main():
    n2b = net2ban.Consumer(username=config.get('client', 'username'),
                           password=config.get('client', 'password'),
                           server=config.get('client', 'server'),
                           port=int(config.get('client', 'port')),
                           virtual_host=config.get('client', 'virtual_host'),
                           exchange=config.get('client', 'exchange'),
                           exchange_type=config.get('client', 'exchange_type'),
                           queue=config.get('client', 'queue'),
                           routing_key=config.get('client', 'routing_key'),
                           ssl=bool(config.get('client', 'ssl')))

    def callback(unused_channel, basic_deliver, properties, body):
        logging.info('Received message # %s from %s: %s',
                     basic_deliver.delivery_tag, properties.app_id, body)
        data = json.loads(body)
        ct = int(time.time())
        ct -= 60
        global n2bmsgs
        n2bmsg = {'timestamp': data['timestamp'], 'jail': data['jail'],
                  'command': data['command'], 'value': data['value'], }

        if (os.path.isfile('/tmp/n2bmsgs.p')):
            with open("/tmp/n2bmsgs.p", "rb") as f:
                n2bmsgs = pickle.load(f)
            for entry in n2bmsgs:
                if entry['timestamp'] < ct:
                    del entry

            for entry in n2bmsgs:
                if (
                    n2bmsg['value'] == entry['value']
                    and n2bmsg['jail'] == entry['jail']
                    and n2bmsg['command'] == entry['command']
                ):
                    logging.info('DUPLICATE message # %s from %s: %s',
                                 basic_deliver.delivery_tag,
                                 properties.app_id, body)
                    return None

        else:
            with open("/tmp/n2bmsgs.p", "wb") as f:
                pickle.dump([n2bmsg], f)

        subprocess.call(["fail2ban-client", "set", n2bmsg['jail'],
                        n2bmsg['command'], n2bmsg['value']])
        n2b.acknowledge_message(basic_deliver.delivery_tag)
        n2bmsgs.append(n2bmsg)
        with open("/tmp/n2bmsgs.p", "wb") as f:
            pickle.dump(n2bmsgs, f)

    try:
        n2b.on_message = callback
        pool = eventlet.GreenPool()
        pool.spawn(n2b.run())
        pool.waitall()
    except KeyboardInterrupt:
        n2b.stop()


if __name__ == '__main__':
    main()
