#!/usr/bin/env python
import argparse
import ConfigParser
import json
import net2ban
import logging

config = ConfigParser.ConfigParser(allow_no_value=True)
config.readfp(open('/etc/net2ban/net2ban.cfg'))
logging.basicConfig(filename='/var/log/net2ban.log', level=logging.INFO)


class JailAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        jail = ['sshd','exim','dovecot','all']
        if values not in jail:
            print "Invalid Jail:", values
            print jail
            raise ValueError("Invalid Jail")
        setattr(namespace, self.dest, values)


class CommandAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        command = ['banip','unbanip']
        if values not in command:
            print "Invalid Command:", values
            print command
            raise ValueError("Invalid Command")
        setattr(namespace, self.dest, values)


class IPAction(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        a = values.split('.')
        if len(a) != 4:
            print "Invalid IP:", values
            raise ValueError("Not a valid IP")
        for x in a:
            if not x.isdigit():
                print "Invalid IP:", values
                raise ValueError("Not a valid IP")
            i = int(x)
            if i < 0 or i > 255:
                print "Invalid IP:", values
                raise ValueError("Not a valid IP")
        setattr(namespace, self.dest, values)


def main(args):

    msg = {'jail': args.jail,'command': args.command,'value': args.ip,}

    n2b = net2ban.Net2Ban(username=config.get('server', 'username'),
                          password=config.get('server', 'password'),
                          host=config.get('server', 'server'),
                          port=int(config.get('server', 'port')),
                          virtual_host=config.get('server', 'virtual_host'),
                          exchange=config.get('server', 'exchange'),
                          exchange_type=config.get('server', 'exchange_type'),
                          queue=config.get('server', 'queue'),
                          ssl=bool(config.get('server', 'ssl')))

    n2b.connect()
    message = json.dumps(msg)
    n2b.write(message)
    print "submitted: "+message
    logging.info(message)
    n2b.disconnect()



if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('--jail', type=str, required=True, action=JailAction,
                        help="fail2ban jail to perform command on")
    parser.add_argument('--command', type=str, required=True, action=CommandAction,
                        help="fail2ban command to run")
    parser.add_argument('--ip', type=str, required=True, action=IPAction,
                        help="ip to perform fail2ban command on")
    args = parser.parse_args()
    main(args)
